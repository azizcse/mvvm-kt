apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "org.workfort.base"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    buildToolsVersion '28.0.2'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
        // as noted by @Vishnuvathsan you may also need to include
        // variations on the file name. It depends on your dependencies.
        // Some other common variations on notice and license file names
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'

        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //room

    //implementation "android.arch.persistence.room:runtime:$room_version"

    //implementation "android.arch.persistence.room:rxjava2:$room_version"

    //annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    //Support
    implementation "com.android.support:appcompat-v7:$supportlib_version"
    implementation "com.android.support:recyclerview-v7:$supportlib_version"
    implementation "com.android.support:cardview-v7:$supportlib_version"
    implementation "com.android.support:design:$supportlib_version"

    //Rx-java

    // implementation "io.reactivex.rxjava2:rxjava:$rxjava2"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    //lifecycle
    implementation "android.arch.lifecycle:reactivestreams:$lifecycle"
    implementation "android.arch.lifecycle:runtime:$lifecycle"
    implementation "android.arch.lifecycle:extensions:$lifecycle"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle"

    //LiveDataReactStream
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Gson to convert from and to json
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    //implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.30.2'

    // coroutines

    //implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.30.2"

    //implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.30.2"

    //implementation 'androidx.core:core-ktx:0.1'
    api project(':techfort')
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
